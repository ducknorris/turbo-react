<!DOCTYPE html>

<html>
  <head>
    <meta charset="utf-8">
    <title>Turbo React</title>
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet">
    <style>
      .panel,
      .panel-heading {
        transition: all 2s;
      }

      <% (0..20).each do |n| %>
        .width<%= n * 5 %> { width: <%= n * 5 %>%; }
      <% end %>
    </style>

    <script src="http://fb.me/react-0.4.1.js"></script>
    <script src="http://fb.me/JSXTransformer-0.4.1.js"></script>
    <script src="/turbo-react-0.0.1.js"></script>
    <script src="/turbolinks-1.4.0.js"></script>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col-md-6 col-md-offset-3">
          <h1>Reacting Turboly</h1>
          <p class="lead">
            This is a mix of <a href="http://facebook.github.io/react/">React</a>,
            React's
            <a href="http://facebook.github.io/react/docs/jsx-in-depth.html">JSX</a>,
            and a slightly-modified
            <a href="https://github.com/rails/turbolinks/">Turbolinks</a> that
            applies DOM "diffs" without any server configuration&mdash;it just
            needs plain old HTML.
          </p>
          <div class="panel <%= @panel_class %>">
            <div class="panel-heading">
              This is the answer to life
            </div>
            <div class="panel-body">
              The class this time is <code><%= @panel_class %></code>.
            </div>
          </div>
          <div class="progress progress-striped active">
            <div class="progress-bar progress-bar-success width<%= rand(21) * 5 %>"></div>
          </div>
          <p>The panel is rendered with a random <code>panel-</code> class on each
            request, and the progress bar gets a random <code>widthX</code>
            class.</p>
          <p>With Turbolinks alone, the entire <code>&lt;body&gt;</code> would be
            replaced, and transitions would not happen. In this little demo
            though, React adds and removes classes, and the attribute changes
            are animated with CSS transitions.</p>
          <p>The code that turns the <code>&lt;body&gt;</code> into a React
            element:
            <a href="turbo-react-0.0.1.js">turbo-react-0.0.1.js</a></p>
          <a class="btn btn-primary" href="/">Re-request this page</a> 
          <p class="text-muted">
            Requested at <%= Time.now.strftime("%Y-%m-%d %H:%M:%S") %>
          </p>
        </div>
      </div>
    </div>
  </body>
</html>
